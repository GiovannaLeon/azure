[0m[1mazurerm_resource_group.rg: Refreshing state... [id=/subscriptions/d6dcc265-979b-4e5b-9cb5-a6ac0116f950/resourceGroups/myResourceGroup][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # azurerm_container_registry.acr[0m will be created
[0m  [32m+[0m[0m resource "azurerm_container_registry" "acr" {
      [32m+[0m[0m admin_enabled                 = true
      [32m+[0m[0m admin_password                = (sensitive value)
      [32m+[0m[0m admin_username                = (known after apply)
      [32m+[0m[0m encryption                    = (known after apply)
      [32m+[0m[0m export_policy_enabled         = true
      [32m+[0m[0m id                            = (known after apply)
      [32m+[0m[0m location                      = "spaincentral"
      [32m+[0m[0m login_server                  = (known after apply)
      [32m+[0m[0m name                          = "myacr01"
      [32m+[0m[0m network_rule_bypass_option    = "AzureServices"
      [32m+[0m[0m network_rule_set              = (known after apply)
      [32m+[0m[0m public_network_access_enabled = true
      [32m+[0m[0m resource_group_name           = "myResourceGroup"
      [32m+[0m[0m sku                           = "Basic"
      [32m+[0m[0m trust_policy_enabled          = false
      [32m+[0m[0m zone_redundancy_enabled       = false
    }

[1m  # azurerm_kubernetes_cluster.aks[0m will be created
[0m  [32m+[0m[0m resource "azurerm_kubernetes_cluster" "aks" {
      [32m+[0m[0m current_kubernetes_version          = (known after apply)
      [32m+[0m[0m dns_prefix                          = "myaks"
      [32m+[0m[0m fqdn                                = (known after apply)
      [32m+[0m[0m http_application_routing_zone_name  = (known after apply)
      [32m+[0m[0m id                                  = (known after apply)
      [32m+[0m[0m kube_admin_config                   = (sensitive value)
      [32m+[0m[0m kube_admin_config_raw               = (sensitive value)
      [32m+[0m[0m kube_config                         = (sensitive value)
      [32m+[0m[0m kube_config_raw                     = (sensitive value)
      [32m+[0m[0m kubernetes_version                  = (known after apply)
      [32m+[0m[0m location                            = "spaincentral"
      [32m+[0m[0m name                                = "myAKSCluster"
      [32m+[0m[0m node_os_upgrade_channel             = "NodeImage"
      [32m+[0m[0m node_resource_group                 = (known after apply)
      [32m+[0m[0m node_resource_group_id              = (known after apply)
      [32m+[0m[0m oidc_issuer_url                     = (known after apply)
      [32m+[0m[0m portal_fqdn                         = (known after apply)
      [32m+[0m[0m private_cluster_enabled             = false
      [32m+[0m[0m private_cluster_public_fqdn_enabled = false
      [32m+[0m[0m private_dns_zone_id                 = (known after apply)
      [32m+[0m[0m private_fqdn                        = (known after apply)
      [32m+[0m[0m resource_group_name                 = "myResourceGroup"
      [32m+[0m[0m role_based_access_control_enabled   = true
      [32m+[0m[0m run_command_enabled                 = true
      [32m+[0m[0m sku_tier                            = "Free"
      [32m+[0m[0m support_plan                        = "KubernetesOfficial"
      [32m+[0m[0m workload_identity_enabled           = false

      [32m+[0m[0m auto_scaler_profile (known after apply)

      [32m+[0m[0m default_node_pool {
          [32m+[0m[0m kubelet_disk_type    = (known after apply)
          [32m+[0m[0m max_pods             = (known after apply)
          [32m+[0m[0m name                 = "default"
          [32m+[0m[0m node_count           = 1
          [32m+[0m[0m node_labels          = (known after apply)
          [32m+[0m[0m orchestrator_version = (known after apply)
          [32m+[0m[0m os_disk_size_gb      = (known after apply)
          [32m+[0m[0m os_disk_type         = "Managed"
          [32m+[0m[0m os_sku               = (known after apply)
          [32m+[0m[0m scale_down_mode      = "Delete"
          [32m+[0m[0m type                 = "VirtualMachineScaleSets"
          [32m+[0m[0m ultra_ssd_enabled    = false
          [32m+[0m[0m vm_size              = "Standard_B2s"
          [32m+[0m[0m workload_runtime     = (known after apply)
        }

      [32m+[0m[0m identity {
          [32m+[0m[0m principal_id = (known after apply)
          [32m+[0m[0m tenant_id    = (known after apply)
          [32m+[0m[0m type         = "SystemAssigned"
        }

      [32m+[0m[0m kubelet_identity (known after apply)

      [32m+[0m[0m network_profile (known after apply)

      [32m+[0m[0m windows_profile (known after apply)
    }

[1m  # azurerm_network_interface.nic[0m will be created
[0m  [32m+[0m[0m resource "azurerm_network_interface" "nic" {
      [32m+[0m[0m accelerated_networking_enabled = false
      [32m+[0m[0m applied_dns_servers            = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m internal_domain_name_suffix    = (known after apply)
      [32m+[0m[0m ip_forwarding_enabled          = false
      [32m+[0m[0m location                       = "spaincentral"
      [32m+[0m[0m mac_address                    = (known after apply)
      [32m+[0m[0m name                           = "myNIC"
      [32m+[0m[0m private_ip_address             = (known after apply)
      [32m+[0m[0m private_ip_addresses           = (known after apply)
      [32m+[0m[0m resource_group_name            = "myResourceGroup"
      [32m+[0m[0m virtual_machine_id             = (known after apply)

      [32m+[0m[0m ip_configuration {
          [32m+[0m[0m gateway_load_balancer_frontend_ip_configuration_id = (known after apply)
          [32m+[0m[0m name                                               = "myIPConfig"
          [32m+[0m[0m primary                                            = (known after apply)
          [32m+[0m[0m private_ip_address                                 = (known after apply)
          [32m+[0m[0m private_ip_address_allocation                      = "Dynamic"
          [32m+[0m[0m private_ip_address_version                         = "IPv4"
          [32m+[0m[0m public_ip_address_id                               = (known after apply)
          [32m+[0m[0m subnet_id                                          = (known after apply)
        }
    }

[1m  # azurerm_public_ip.dynamic_ip[0m will be created
[0m  [32m+[0m[0m resource "azurerm_public_ip" "dynamic_ip" {
      [32m+[0m[0m allocation_method       = "Dynamic"
      [32m+[0m[0m ddos_protection_mode    = "VirtualNetworkInherited"
      [32m+[0m[0m fqdn                    = (known after apply)
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m idle_timeout_in_minutes = 4
      [32m+[0m[0m ip_address              = (known after apply)
      [32m+[0m[0m ip_version              = "IPv4"
      [32m+[0m[0m location                = "spaincentral"
      [32m+[0m[0m name                    = "myDynamicPublicIP"
      [32m+[0m[0m resource_group_name     = "myResourceGroup"
      [32m+[0m[0m sku                     = "Basic"
      [32m+[0m[0m sku_tier                = "Regional"
      [32m+[0m[0m tags                    = {
          [32m+[0m[0m "environment" = "Production"
        }
    }

[1m  # azurerm_subnet.subnet[0m will be created
[0m  [32m+[0m[0m resource "azurerm_subnet" "subnet" {
      [32m+[0m[0m address_prefixes                              = [
          [32m+[0m[0m "10.0.1.0/24",
        ]
      [32m+[0m[0m default_outbound_access_enabled               = true
      [32m+[0m[0m id                                            = (known after apply)
      [32m+[0m[0m name                                          = "mySubnet"
      [32m+[0m[0m private_endpoint_network_policies             = "Disabled"
      [32m+[0m[0m private_link_service_network_policies_enabled = true
      [32m+[0m[0m resource_group_name                           = "myResourceGroup"
      [32m+[0m[0m virtual_network_name                          = "myVNet"
    }

[1m  # azurerm_virtual_machine.vm[0m will be created
[0m  [32m+[0m[0m resource "azurerm_virtual_machine" "vm" {
      [32m+[0m[0m availability_set_id              = (known after apply)
      [32m+[0m[0m delete_data_disks_on_termination = false
      [32m+[0m[0m delete_os_disk_on_termination    = false
      [32m+[0m[0m id                               = (known after apply)
      [32m+[0m[0m license_type                     = (known after apply)
      [32m+[0m[0m location                         = "spaincentral"
      [32m+[0m[0m name                             = "myLinuxVM"
      [32m+[0m[0m network_interface_ids            = (known after apply)
      [32m+[0m[0m resource_group_name              = "myResourceGroup"
      [32m+[0m[0m vm_size                          = "Standard_D1_v2"

      [32m+[0m[0m os_profile {
          # At least one attribute in this block is (or was) sensitive,
          # so its contents will not be displayed.
        }

      [32m+[0m[0m os_profile_linux_config {
          [32m+[0m[0m disable_password_authentication = true

          [32m+[0m[0m ssh_keys {
              [32m+[0m[0m key_data = <<-EOT
                    ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQD3Il3gvFd4NlBKBYVg25ouuBzxPTiRzwud5Xv9nyhyZGVjLMYmVgODuYbvlhiKzfoQhbcqkgyyap3uQ4SebKit/NaUKrcrzhsXBhSJSgcRPRs1c7LKtsDsFrLq7Pa+O2lLYO0hWOpUsWUNHFq7mssf3EnoYS/tboy/TfjYGLSJWLyrp2orzIfnzm6eomiPVvLrexdTBR2i2nxx8APb1/SLAula9q1koU4Aw+Ng7DkREPWudl7LBdhqoa1FrQwx04gN182zZp1VTMXarle5VJeCaOhBEvzAm6kuZDj3PSu8ttSdFKVXeY2gKvtsx1fmLx7fB1+ZlbxeCvgr0AdTBZpt amaro@Amaro
                EOT
              [32m+[0m[0m path     = "/home/ubuntu_user/.ssh/authorized_keys"
            }
        }

      [32m+[0m[0m storage_data_disk (known after apply)

      [32m+[0m[0m storage_image_reference {
            id        = [90mnull[0m[0m
          [32m+[0m[0m offer     = "0001-com-ubuntu-server-jammy"
          [32m+[0m[0m publisher = "Canonical"
          [32m+[0m[0m sku       = "22_04-lts"
          [32m+[0m[0m version   = "latest"
        }

      [32m+[0m[0m storage_os_disk {
          [32m+[0m[0m caching                   = "ReadWrite"
          [32m+[0m[0m create_option             = "FromImage"
          [32m+[0m[0m disk_size_gb              = 30
          [32m+[0m[0m managed_disk_id           = (known after apply)
          [32m+[0m[0m managed_disk_type         = (known after apply)
          [32m+[0m[0m name                      = "myosdisk"
          [32m+[0m[0m os_type                   = (known after apply)
          [32m+[0m[0m write_accelerator_enabled = false
        }
    }

[1m  # azurerm_virtual_network.vnet[0m will be created
[0m  [32m+[0m[0m resource "azurerm_virtual_network" "vnet" {
      [32m+[0m[0m address_space                  = [
          [32m+[0m[0m "10.0.0.0/16",
        ]
      [32m+[0m[0m dns_servers                    = (known after apply)
      [32m+[0m[0m guid                           = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m location                       = "spaincentral"
      [32m+[0m[0m name                           = "myVNet"
      [32m+[0m[0m private_endpoint_vnet_policies = "Disabled"
      [32m+[0m[0m resource_group_name            = "myResourceGroup"
      [32m+[0m[0m subnet                         = (known after apply)
    }

[1mPlan:[0m 7 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m acr_admin_password = (sensitive value)
  [32m+[0m[0m acr_admin_username = (known after apply)
  [32m+[0m[0m acr_login_server   = (known after apply)
  [32m+[0m[0m acr_name           = "myacr01"
  [32m+[0m[0m public_ip          = (known after apply)
[90m
─────────────────────────────────────────────────────────────────────────────[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
